{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2020
  },
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["tsconfig.base.json"]
      },
      "plugins": [
        "@angular-eslint",
        "@typescript-eslint",
        "functional",
        "import",
        "max-params-no-constructor",
        "ngrx",
        "rxjs"
      ],
      "settings": {
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": "tsconfig.base.json"
          }
        }
      },
      "rules": {
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "style": "kebab-case",
            "prefix": ["fu"]
          }
        ],
        "@angular-eslint/contextual-decorator": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "style": "camelCase",
            "prefix": "fu"
          }
        ],
        "@angular-eslint/no-attribute-decorator": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-empty-lifecycle-method": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/pipe-prefix": [
          "error",
          {
            "prefixes": ["fu"]
          }
        ],
        "@angular-eslint/prefer-on-push-component-change-detection": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/relative-url-prefix": "error",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true
          }
        ],
        "@typescript-eslint/method-signature-style": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "classProperty",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"]
          },
          {
            "selector": "parameter",
            "modifiers": ["unused"],
            "format": null,
            "custom": {
              "regex": "^(_+|[a-z][a-zA-Z0-9]*)$",
              "match": true
            }
          },
          {
            "selector": ["variable", "typeProperty"],
            "format": ["PascalCase"],
            "types": ["boolean"],
            "prefix": [
              "are",
              "can",
              "contains",
              "has",
              "includes",
              "is",
              "should",
              "use",
              "will"
            ],
            "filter": {
              "regex": "^(loading|disabled|checked|production)$",
              "match": false
            }
          },
          {
            "selector": "objectLiteralProperty",
            "modifiers": ["requiresQuotes"],
            "format": null
          }
        ],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-duplicate-imports": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowWithDecorator": true
          }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implicit-any-catch": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/restrict-plus-operands": [
          "error",
          {
            "checkCompoundAssignments": true
          }
        ],
        "@typescript-eslint/triple-slash-reference": "error",
        "arrow-body-style": ["error", "as-needed"],
        "complexity": "error",
        "constructor-super": "error",
        "curly": "error",
        "eqeqeq": [
          "error",
          "always",
          {
            "null": "never"
          }
        ],
        "functional/immutable-data": [
          "error",
          {
            "ignoreImmediateMutation": true,
            "ignoreAccessorPattern": "this.*"
          }
        ],
        "functional/no-let": [
          "error",
          {
            "allowLocalMutation": true
          }
        ],
        "functional/no-loop-statement": "error",
        "guard-for-in": "error",
        "id-denylist": [
          "error",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined",
          "Null",
          "null",
          "Object",
          "object"
        ],
        "import/default": "error",
        "import/export": "error",
        "import/extensions": [
          "error",
          "never",
          {
            "json": "always"
          }
        ],
        "import/first": "error",
        "import/max-dependencies": [
          "error",
          {
            "max": 20,
            "ignoreTypeImports": true
          }
        ],
        "import/named": "error",
        "import/namespace": "error",
        "import/no-absolute-path": "error",
        "import/no-amd": "error",
        "import/no-anonymous-default-export": "error",
        "import/no-commonjs": "error",
        "import/no-cycle": "error",
        "import/no-default-export": "error",
        "import/no-deprecated": "error",
        "import/no-duplicates": "error",
        "import/no-dynamic-require": "error",
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": false,
            "optionalDependencies": false
          }
        ],
        "import/no-import-module-exports": "error",
        "import/no-mutable-exports": "error",
        "import/no-named-as-default": "error",
        "import/no-named-as-default-member": "error",
        "import/no-named-default": "error",
        "import/no-namespace": "error",
        "import/no-nodejs-modules": "error",
        "import/no-self-import": "error",
        "import/no-unassigned-import": "error",
        "import/no-unresolved": "error",
        "import/no-useless-path-segments": "error",
        "import/no-webpack-loader-syntax": "error",
        "import/unambiguous": "error",
        "max-depth": "error",
        "max-lines": [
          "error",
          {
            "max": 400,
            "skipBlankLines": true,
            "skipComments": true
          }
        ],
        "max-lines-per-function": [
          "error",
          {
            "skipBlankLines": true,
            "skipComments": true
          }
        ],
        "max-nested-callbacks": [
          "error",
          {
            "max": 3
          }
        ],
        "max-params-no-constructor/max-params-no-constructor": ["error", 4],
        "ngrx/avoid-combining-selectors": "error",
        "ngrx/avoid-duplicate-actions-in-reducer": "error",
        "ngrx/avoid-mapping-selectors": "error",
        "ngrx/good-action-hygiene": "error",
        "ngrx/no-dispatch-in-effects": "error",
        "ngrx/no-effect-decorator": "error",
        "ngrx/no-effect-decorator-and-creator": "error",
        "ngrx/no-effects-in-providers": "error",
        "ngrx/no-multiple-global-stores": "error",
        "ngrx/no-reducer-in-key-names": "error",
        "ngrx/no-typed-global-store": "error",
        "ngrx/prefer-concat-latest-from": "error",
        "ngrx/prefer-inline-action-props": "error",
        "ngrx/select-style": ["error", "method"],
        "ngrx/use-consistent-global-store-name": "error",
        "ngrx/use-selector-in-select": "error",
        "no-bitwise": "error",
        "no-cond-assign": "error",
        "no-console": [
          "error",
          {
            "allow": ["error", "warn", "info", "table"]
          }
        ],
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty": "error",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-magic-numbers": [
          "error",
          {
            "ignore": [-1, 0, 1, 2, 7, 10, 24, 60, 100, 1000, 3600],
            "ignoreDefaultValues": true
          }
        ],
        "no-param-reassign": "error",
        "no-redeclare": "error",
        "no-restricted-imports": [
          "error",
          "rxjs/Rx",
          "rxjs/internal/operators"
        ],
        "no-sequences": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-template": "error",
        "radix": "error",
        "rxjs/finnish": [
          "error",
          {
            "functions": true,
            "methods": true,
            "names": {
              "^(canActivate|canActivateChild|canDeactivate|canLoad|intercept|resolve|validate|store)$": false
            },
            "parameters": true,
            "properties": true,
            "strict": false,
            "types": {
              "^EventEmitter$": false
            },
            "variables": true
          }
        ],
        "rxjs/no-exposed-subjects": "error",
        "rxjs/no-internal": "error",
        "rxjs/no-nested-subscribe": "error",
        "rxjs/no-unbound-methods": "error",
        "rxjs/no-unsafe-catch": "error",
        "rxjs/no-unsafe-first": "error",
        "rxjs/no-unsafe-switchmap": "error",
        "rxjs/no-unsafe-takeuntil": "error",
        "yoda": "error"
      }
    },
    {
      "files": ["*.html"],
      "parser": "@angular-eslint/template-parser",
      "plugins": ["@angular-eslint/template"],
      "rules": {
        "@angular-eslint/template/accessibility-alt-text": "error",
        "@angular-eslint/template/accessibility-elements-content": "error",
        "@angular-eslint/template/accessibility-label-for": "error",
        "@angular-eslint/template/accessibility-label-has-associated-control": "error",
        "@angular-eslint/template/accessibility-table-scope": "error",
        "@angular-eslint/template/accessibility-valid-aria": "error",
        "@angular-eslint/template/banana-in-box": "error",
        "@angular-eslint/template/click-events-have-key-events": "error",
        "@angular-eslint/template/conditional-complexity": "error",
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true
          }
        ],
        "@angular-eslint/template/mouse-events-have-key-events": "error",
        "@angular-eslint/template/no-any": "error",
        "@angular-eslint/template/no-autofocus": "error",
        "@angular-eslint/template/no-call-expression": "error",
        "@angular-eslint/template/no-distracting-elements": "error",
        "@angular-eslint/template/no-duplicate-attributes": "error",
        "@angular-eslint/template/no-negated-async": "error",
        "@angular-eslint/template/no-positive-tabindex": "error",
        "@angular-eslint/template/use-track-by-function": "error"
      }
    }
  ]
}
